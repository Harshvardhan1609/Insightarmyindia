/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 camera.gltf --transform
Author: Robin Vandenberghe (https://sketchfab.com/RobinVandenberghe)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/vintage-camera-asahi-pentax-h2-a2d73560b1a841b59875cf2581ffd8cf
Title: Vintage Camera ~ Asahi Pentax H2
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/camera-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <group position={[0, -158.3, -36.69]} rotation={[1.57, 0, 0]}>
        <group rotation={[-Math.PI, 0, 0]}>
          <group position={[132.22, -54.02, 99.87]} rotation={[0.39, Math.PI / 2, 0]}>
            <mesh geometry={nodes.Rings_LP_Bag_0.geometry} material={materials.material} position={[9, -3.65, -0.32]} />
          </group>
          <group position={[-159.4, -45.71, 54.74]} rotation={[2.29, 0.47, -0.17]}>
            <mesh geometry={nodes.Pins_LP_Bag_0.geometry} material={materials.material} position={[0, 0, -4.91]} />
          </group>
          <group position={[-1.74, -53.69, 77.8]} rotation={[Math.PI / 2, 0, 0]} scale={[1.04, 1, 1.19]}>
            <mesh geometry={nodes.Bag_LP_Bag_0.geometry} material={materials.material} position={[-0.41, 0, -53.9]} />
          </group>
          <group position={[6.36, -64.8, 98.02]} rotation={[Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Body_LP_Device_0.geometry} material={materials.Device} position={[-8.52, -20.22, -65.01]} />
          </group>
          <group position={[6.39, -140.47, 76.46]} rotation={[Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.LensInside_LP_Bag_0.geometry} material={materials.material} position={[0, 0, -4.62]} />
          </group>
          <mesh geometry={nodes.ViewPort_LP_Device_0.geometry} material={materials.Device} position={[6.44, -28.9, 136.77]} rotation={[-Math.PI / 2, 0, -Math.PI]} />
          <mesh geometry={nodes.Knop3_Onder_LP_Device_0.geometry} material={materials.Device} position={[-52.91, -50.1, 134.76]} rotation={[0, 0, -Math.PI / 9]} />
          <mesh geometry={nodes.Knop4_LP_Device_0.geometry} material={materials.Device} position={[88.29, -52.69, 139.5]} rotation={[0, 0, -Math.PI / 9]} />
          <mesh geometry={nodes.Knop1_LP_Device_0.geometry} material={materials.Device} position={[-94.51, -52.74, 140.45]} rotation={[0, 0, -1.17]} />
          <mesh geometry={nodes.Knop2_LP_Device_0.geometry} material={materials.Device} position={[-67.33, -69.56, 135.04]} rotation={[0, 0, -Math.PI / 9]} />
          <mesh geometry={nodes.Knop1_Onder_LP_Device_0.geometry} material={materials.Device} position={[-73.82, -38.81, 135.33]} />
          <mesh geometry={nodes.Knop4_Onder_LP_Device_0.geometry} material={materials.Device} position={[88.41, -52.43, 136.01]} rotation={[0, 0, -Math.PI / 9]} />
          <mesh geometry={nodes.Knop3_LP_Device_0.geometry} material={materials.Device} position={[-52.91, -50.1, 144.59]} rotation={[0, 0, -Math.PI / 9]} />
          <mesh geometry={nodes.Knop5_LP_Device_0.geometry} material={materials.Device} position={[-66.76, -79.76, 105.61]} rotation={[Math.PI / 2, 0, -0.4]} />
          <mesh geometry={nodes.Haakjes_LP_Bag_0.geometry} material={materials.material} position={[126.5, -59.59, 101.85]} rotation={[-Math.PI / 2, 0, -Math.PI]} />
          <mesh geometry={nodes.Ribbon_LP_Bag_0.geometry} material={materials.material} position={[-9.33, 62.88, 0]} />
          <mesh geometry={nodes.IronPieces_LP_Bag_0.geometry} material={materials.material} position={[66.95, -83.72, 20.02]} rotation={[Math.PI / 2, 0, 0]} />
          <mesh geometry={nodes.Lence_LP_Bag_0.geometry} material={materials.material} position={[6.39, -103.52, 76.46]} rotation={[Math.PI / 2, 0, -1.57]} />
          <mesh geometry={nodes.Iris_LP_Lens_0.geometry} material={materials.Lens} position={[6.39, -144.8, 76.46]} rotation={[Math.PI / 2, 0, 0]} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/camera-transformed.glb')
